{"version":3,"sources":["contexts/LatLongContext.js","contexts/WeatherDataContext.js","contexts/CityContext.js","components/nav.js","components/sevendays.js","components/openWeatherApi.js","components/history.js","components/map.js","components/loader.js","components/chart.js","App.js","index.js"],"names":["React","createContext","Nav","className","NavLink","activeClassName","exact","to","SevenDayReport","useContext","LatLongContext","latLongValues","city","CityContext","weatherData","WeatherDataContext","useState","dayTime","setDay","moment","require","currentWindDirection","wind_deg","currentStory","alert","current","weather","length","riseSetTime","setTime","riseTime","timeOffset","timezone_offset","utcOffSet","tz","timezone","utcOffset","set","Date","rise","setUnit","getHours","riseUnit","setHours","setMinutes","getMinutes","riseHours","riseMinutes","format","Link","style","color","cursor","textDecorationLine","Math","round","temp","marginLeft","feels_like","src","icon","alt","main","time","sunset","sunrise","wind_speed","humidity","visibility","wind_gust","dew_point","pressure","toFixed","clouds","lineHeight","uvi","fontWeight","currentOtherInfo","fontSize","type","onClick","daily","map","day","index","date","dt","background","description","night","pop","marginTop","rain","snow","nextSevendays","id","axios","create","baseURL","createBrowserHistory","MapContainer","setCity","setLatLongValues","findlatlong","a","post","location","lat","data","results","geometry","long","lng","history","push","onChange","e","target","value","placeholder","bootstrapURLKeys","keys","defaultCenter","defaultZoom","onGoogleApiLoaded","maps","Marker","position","renderMarkers","Loading","Chart","setChartData","weatherDescription","setWeatherDescription","useEffect","arr","tempHigh","tempLow","timeZoneOffSet","max","min","backgroundColor","labels","datasets","title","label","borderColor","textAlign","options","plugins","tooltip","callbacks","footer","tooltipItems","i","scales","x","grid","App","console","log","setWeatherData","openWeatherApi","response","Fragment","Router","Provider","Route","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3936b133.chunk.js","sourcesContent":["import React from 'react';\r\nexport default React.createContext({});","import React from \"react\";\r\n\r\nexport default React.createContext({});","import React from 'react';\r\nexport default React.createContext({});","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport '../css/nav.css';\r\nconst Nav=()=>{\r\n    return(\r\n        <div className=\"navbuttons\">\r\n        <NavLink activeClassName=\"active\" exact={true} to=\"/\" className=\"navbtn\"><span>7 days</span></NavLink>\r\n        <NavLink activeClassName=\"active\" exact={true} to=\"/graph\" className=\"navbtn\"><span>Graph</span></NavLink>\r\n       </div>\r\n    )\r\n}\r\nexport default Nav;","\r\nimport '../css/sevenday.css';\r\nimport React, { useState,useContext } from 'react';\r\nimport LatLongContext from '../contexts/LatLongContext';\r\nimport WeatherDataContext from '../contexts/WeatherDataContext';\r\nimport CityContext from '../contexts/CityContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from './nav';\r\nconst SevenDayReport=()=>{\r\nconst {latLongValues}=useContext(LatLongContext);\r\nconst {city}=useContext(CityContext);\r\nconst {weatherData}=useContext(WeatherDataContext);\r\nconst [dayTime,setDay]=useState(true);\r\nvar moment=require('moment-timezone');\r\n\r\n\r\nconst currentWindDirection=(wind_deg)=>{\r\n  \r\n        if(wind_deg===0)\r\n        {\r\n            return 'N'\r\n        }\r\n        else if(wind_deg>0 && wind_deg<90)\r\n        {\r\n            return 'NE'\r\n        }\r\n        else if(wind_deg===90)\r\n        {\r\n           return 'E'\r\n        }\r\n        else if(wind_deg>90 && wind_deg<180)\r\n        {\r\n            return 'SE'\r\n        }\r\n        else if(wind_deg===180)\r\n        {\r\n            return 'S'\r\n        }\r\n        else if(wind_deg>180 && wind_deg<270)\r\n        {\r\n            return 'SW'\r\n        }\r\n       else  if(wind_deg===270)\r\n        {\r\n            return 'W'\r\n        }\r\n        else if(wind_deg>270 && wind_deg<360)\r\n        { \r\n            return 'NW'\r\n        }\r\n    \r\n}\r\nconst windGust=()=>{\r\n\r\n    if(weatherData.current.wind_gust )\r\n    {\r\n     return( <div className=\"dailyinfo\"> \r\n        <div className=\"dailyinfotitle\"><span> Wind gust</span></div>\r\n         <div className=\"dailyweatherinfo\">\r\n             <div className=\"dailyinfodigit\">{Math.round(weatherData.current.wind_gust*18/5)}</div>\r\n             <div className=\"units\">km/h</div>\r\n         </div>\r\n   </div>)\r\n    }\r\n return( <div className=\"dailyinfo\"> \r\n        <div className=\"dailyinfotitle\"><span>Dew Point</span></div>\r\n        <div className=\"dailyweatherinfo\">\r\n            <div className=\"dailyinfodigit\">{Math.round(weatherData.current.dew_point)}°</div>\r\n        </div>\r\n        </div>\r\n        )\r\n        \r\n      \r\n}\r\n\r\nconst currentStory=()=>{\r\n        if(weatherData.alert  &&  weatherData.current.weather.length>0)\r\n        {\r\n                return(<div className=\"box\">\r\n                <div className=\"title\">Today's Story</div>\r\n                <div className=\"story\">{weatherData.alert }</div>    \r\n            </div>)  \r\n        }\r\n\r\n    return;\r\n\r\n}\r\n\r\nconst currentOtherInfo=()=>{\r\n    let time=riseSetTime(weatherData.current.sunset,weatherData.current.sunrise);\r\n    return(\r\n        <div className=\"todayinfo\">\r\n\r\n            <div className=\"todaytemp\">\r\n                <div className=\"dailyinfo\">\r\n                    <div className=\"dailyinfotitle\">Wind</div>\r\n                    <div className=\"dailyweatherinfo\">\r\n                        <div className=\"dailyinfodigit\">{Math.round(weatherData.current.wind_speed*18/5)}</div>\r\n                        <div className=\"windunits\">\r\n                            <div>{currentWindDirection(weatherData.current.wind_deg)}</div>\r\n                            <div>km/h</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dailyinfo\">\r\n                    <div className=\"dailyinfotitle\">Humidity</div>\r\n                    <div className=\"dailyweatherinfo\">\r\n                        <div className=\"dailyinfodigit\">{weatherData.current.humidity}</div>\r\n                        <div className=\"units\">%</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dailyinfo\">  \r\n                    <div className=\"dailyinfotitle\">Visibility</div>\r\n                    <div className=\"dailyweatherinfo\">\r\n                        <div className=\"dailyinfodigit\">{weatherData.current.visibility/1000}</div>\r\n                        <div className=\"units\">km</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dailyinfo\"> \r\n                     <div className=\"dailyinfotitle\">Sunrise</div>\r\n                    <div className=\"dailyweatherinfo\">\r\n                        <div className=\"dailyinfodigit\">{time.riseHours}:{time.riseMinutes}</div>\r\n                        <div className=\"units\">{time.riseUnit}</div>\r\n                    </div>\r\n                </div>\r\n                {windGust()}\r\n                <div className=\"dailyinfo\">  \r\n                    <div className=\"dailyinfotitle\">Pressure</div>\r\n                    <div className=\"dailyweatherinfo\">\r\n                        <div className=\"dailyinfodigit\">{(weatherData.current.pressure*0.1).toFixed(1)}</div>\r\n                        <div className=\"units\">kPa</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dailyinfo\"> \r\n                     <div className=\"dailyinfotitle\">Clouds</div>\r\n                    <div className=\"dailyweatherinfo\">\r\n                        <div className=\"dailyinfodigit\">{weatherData.current.clouds}</div>\r\n                        <div className=\"units\">%</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dailyinfo\"> \r\n                    <div className=\"dailyinfotitle\">Sunset</div>\r\n                    <div className=\"dailyweatherinfo\">\r\n                        <div className=\"dailyinfodigit\">{time.setHours}:{time.setMinutes}</div>\r\n                        <div className=\"units\">{time.setUnit}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"extrainfo\">\r\n                    <div style={{color: 'white', lineHeight: '25px'}}>UV</div> \r\n                    <div  className={`${Math.round(weatherData.current.uvi) > 5 ? \"dangerbadge \" : (Math.round(weatherData.current.uvi)<5 && Math.round(weatherData.current.uvi)>2) ? \"moderatebadge\" : \"badge\"}`}>\r\n                    {Math.round(weatherData.current.uvi)}</div>\r\n                    <div style={{marginLeft: '20px',lineHeight: '25px',color: 'white',fontWeight: 'bold'}}>\r\n                    {`${Math.round(weatherData.current.uvi) > 5 ? \"Dangerous\" : (Math.round(weatherData.current.uvi)<5 && Math.round(weatherData.current.uvi)>2) ? \"Bad\" : \"Good\"}`}\r\n                    </div>\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nconst topbar=()=>{\r\n\r\n        return(\r\n            <div className=\"temperature-details\">\r\n            <div className=\"temperature-information\">\r\n                <div className=\"location-title\">{city} Weather</div>\r\n                <span className=\"lastUpdated\">Updated on {moment().format('ddd ,MMM D, h:mm a')}</span>\r\n            </div>\r\n            <div className=\"temperature-add-location\">\r\n                <div className=\"add-location\">\r\n                    <div className=\"location-button\">\r\n                        <Link to=\"/changeLocation\" className=\"changeLocation\" style={{color: \"white\",cursor: 'pointer',textDecorationLine: 'underline'}}>Change Location</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const today=()=>{\r\n     \r\n        return(\r\n        <div className=\"weather\">\r\n        <div className=\"w\">\r\n            <div className=\"weatherinfo\">\r\n\r\n                    <div>\r\n                        <div className=\"tempdigit\">{Math.round(weatherData.current.temp)}</div>\r\n                    </div>\r\n                \r\n                    <div className=\"tempinfo\">\r\n                        <div className=\"celsuis\">°C</div>\r\n                        <div className=\"tempfill\">\r\n                            <div  className=\"feeltitle\">\r\n                                <div>FEELS</div>\r\n                                <div style={{marginLeft: '10px'}}>LIKE</div>\r\n                            </div>\r\n\r\n                            <div className=\"tempno\">{ Math.round(weatherData.current.feels_like)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"weatherimage\">\r\n                        <img className=\"tempimage\" src={`http://openweathermap.org/img/wn/${weatherData.current.weather[0].icon}@2x.png`} alt=\"\"/>\r\n                    </div>\r\n                 \r\n            </div>\r\n         <div className=\"weatherKeyword\">{weatherData.current.weather.length > 0 ? weatherData.current.weather[0].main : null}</div>\r\n        </div>\r\n        \r\n        <div className=\"weather-story\">\r\n         {currentStory()} \r\n        </div>\r\n    </div>)\r\n    }\r\n    const riseSetTime=(setTime,riseTime)=>{\r\n        let timeOffset=weatherData.timezone_offset >0 ? -weatherData.timezone_offset : weatherData.timezone_offset;\r\n        let utcOffSet=moment().tz(weatherData.timezone).utcOffset();\r\n        let set=new Date(setTime*1000-(timeOffset *1000)+utcOffSet*60000);\r\n        let rise=new Date(riseTime*1000-(timeOffset*1000)+utcOffSet*60000);\r\n        let setUnit=set.getHours() >= 12 ? 'PM' : 'AM';\r\n        let riseUnit=rise.getHours() >= 12  ? 'PM' : 'AM';\r\n        let setHours=set.getHours() > 12 ? ((set.getHours()-12) < 10 ? '0'+(set.getHours()-12) : (set.getHours()-12)) : ((set.getHours() < 10 ? '0'+set.getHours() : set.getHours()))\r\n        let setMinutes=set.getMinutes()<10 ? '0'+set.getMinutes() : set.getMinutes();\r\n        let riseHours=rise.getHours() > 12 ? ((rise.getHours()-12) < 10 ? '0'+(rise.getHours()-12) : (rise.getHours()-12)) : ((rise.getHours() < 10 ? '0'+rise.getHours() : rise.getHours()))\r\n        let riseMinutes=rise.getMinutes()<10 ? '0'+rise.getMinutes() : rise.getMinutes();\r\n        let result={setUnit: setUnit,riseUnit: riseUnit,riseHours: riseHours,riseMinutes: riseMinutes,setHours: setHours,setMinutes: setMinutes}\r\n        return result;\r\n    }\r\n    const toggle=()=>{\r\n        let change=!dayTime;\r\n        setDay(change);\r\n    }\r\n    const nextSevendays=()=>{\r\n        if(weatherData.daily.length>0)\r\n        {\r\n            const days=weatherData.daily.map((day,index)=>{\r\n                if(index>0)\r\n                {\r\n                let utcOffSet=moment().tz(weatherData.timezone).utcOffset();\r\n                let date=new Date(day.dt*1000-(weatherData.timezone_offset*1000)+utcOffSet*60000);      \r\n                return(\r\n                        <div key={index}  className=\"weekday\">\r\n                            <div style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#F3F3F3' : '#FAFAFA'}} className=\"day\">\r\n                                <div> <span>{moment(date).format('ddd')}</span></div>\r\n                                <div className=\"date\"> <span>{moment(date).format('M/D')}</span> </div>\r\n                            </div>\r\n                            <div style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#F3F3F3' : '#FAFAFA'}} className=\"daydescription\">\r\n                                <div> <span>{day.weather[0].description}</span></div>\r\n                            </div>\r\n                            <div style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#F3F3F3' : '#FAFAFA'}} className=\"weathericon\">\r\n                                <img className=\"dayweatherimage\" src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`} alt=\"\"/>\r\n                            </div>\r\n                            <div style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#F3F3F3' : '#FAFAFA'}} className=\"daytemperature\">\r\n                                <span>{`${dayTime ? Math.round(day.temp.day) : Math.round(day.temp.night)}`}</span>\r\n                                <span className=\"weatherunit\">°</span>\r\n                            </div>\r\n                            <div className=\"dayinfo\">\r\n                                <div className=\"daytempinfo\" style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#E4E4E4' : '#F3F3F3'}}><span className=\"information\">{`${dayTime ? Math.round(day.feels_like.day) : Math.round(day.feels_like.night)}`}°</span></div>\r\n\r\n                                <div className=\"daytempinfo\" style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#F3F3F3' : '#FAFAFA'}}>\r\n                                    <span className=\"information\">{`${!dayTime ? Math.round(day.temp.day) : Math.round(day.temp.night)}`}°</span>\r\n                                </div>\r\n\r\n                                <div className=\"daytempinfo\" style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#E4E4E4' : '#F3F3F3'}}><span className=\"information\">{Math.round(day.pop)}</span><span style={{fontSize: '14px',marginLeft: '5px'}}>%</span></div>\r\n                                <div className=\"daytempinfo\" style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#F3F3F3' : '#FAFAFA'}}><span className=\"information\">{Math.round(day.wind_speed*18/5)}</span><span style={{fontSize: '11px', marginTop: '4px',marginLeft: '5px'}}>{currentWindDirection(weatherData.current.wind_deg)}</span></div>\r\n                                <div className=\"daytempinfo\" style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#E4E4E4' : '#F3F3F3'}}><span className=\"information\">{Math.round(day.wind_gust*18/5)} </span></div>\r\n                                <div className=\"daytempinfo\" style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#F3F3F3' : '#FAFAFA'}}><span style={{fontSize: '13px',fontWeight: 'bold'}} className=\"information\">{`${day.rain ? day.rain+' mm' : '-'}`}</span></div>\r\n                                <div className=\"daytempinfo\" style={{background: moment(date).format('dddd')==='Saturday' || moment(date).format('dddd')==='Sunday' ? '#E4E4E4' : '#F3F3F3'}}><span  style={{fontSize: '13px',fontWeight: 'bold'}} className=\"information\">{`${day.snow ? day.snow+' mm' : '-'}`}</span></div>\r\n                            </div>\r\n                        </div>\r\n                  \r\n                    )\r\n                }\r\n            })\r\n            return days; \r\n        }\r\n            return;\r\n    }\r\n    if(weatherData.current)\r\n    {\r\n        return( \r\n        \r\n            <div className=\"container\">\r\n            <div className=\"location-container\">\r\n                <Nav />\r\n                {topbar() }\r\n                {today()}\r\n                {currentOtherInfo()}\r\n                <div className=\"sevendays\">\r\n                    <div className=\"topbar\">\r\n                        <div className=\"barheading\">\r\n                            <span style={{fontSize: '1.2rem', color: '#333'}}>Next 7 Days</span> \r\n                        </div>\r\n                        <div className=\"togglebutton\"> \r\n                            <span className=\"sun\">☀</span>\r\n                            <label className=\"switch\">\r\n                                <input type=\"checkbox\" onClick={toggle} />\r\n                                <span className=\"slider round\"></span>\r\n                              </label>\r\n                              <span className=\"moon\">☾</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"days\">\r\n                    {nextSevendays()}\r\n                    <div className=\"infoheadings\">\r\n                                <div className=\"unitinfo\" ><div id=\"feel\">Feels like</div></div>\r\n                                <div className=\"unitinfo\">\r\n                                    <div className=\"single\">{`${dayTime ? 'Night' : 'Day'}`}</div>\r\n                                </div>\r\n                                <div className=\"unitinfo\">\r\n                                    <div className=\"single\">POP</div>\r\n                                </div>\r\n                                <div className=\"unitinfo\" >\r\n                                    <div>Wind (km/h) </div> \r\n                                </div>\r\n                                <div className=\"unitinfo\">\r\n                                    <div>Wind gust (km/h)</div> \r\n                               </div>\r\n                           \r\n                                <div className=\"unitinfo\">\r\n                                    <div>24 Hr Rain</div>\r\n                                </div>\r\n                                <div className=\"unitinfo\">\r\n                                    <div>24 Hr Snow</div>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    </div>\r\n            </div>\r\n            </div>)\r\n    }\r\n \r\n   else {\r\n       return(<div>Loading...</div>)\r\n   }\r\n}\r\nexport default SevenDayReport;","import axios from 'axios';\r\nexport default axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5/'\r\n})","import {createBrowserHistory} from 'history';\r\nexport default createBrowserHistory();","import React, { useState,useContext,useEffect } from 'react';\r\nimport Nav from './nav';\r\nimport LatLongContext from '../contexts/LatLongContext';\r\nimport CityContext from '../contexts/CityContext';\r\nimport axios from 'axios';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport history from './history';\r\nimport '../css/map.css'\r\nconst MapContainer=()=>{\r\n\r\n const renderMarkers = (map, maps) => {\r\n        \r\n    let marker = new maps.Marker({\r\n        position: { lat: latLongValues.lat,lng: latLongValues.long },\r\n        map\r\n        });\r\n        return marker;\r\n       };\r\n\r\n    const {setCity}=useContext(CityContext);   \r\n    const {setLatLongValues,latLongValues}=useContext(LatLongContext);\r\n    let city='';\r\n    const findlatlong=async ()=>{\r\n        const location=await axios.post(`https://maps.googleapis.com/maps/api/geocode/json?address=${city}&key=AIzaSyB1aViRShZ33unEwBKPPj691LWCTufpuGM`)\r\n        setLatLongValues({lat: location.data.results[0].geometry.location.lat,long: location.data.results[0].geometry.location.lng})\r\n        setCity(city);\r\n        history.push('/');\r\n    }\r\n    return(\r\n        <div className=\"container2\">\r\n        <div className=\"location-container2\">\r\n            <Nav />\r\n            <div className=\"input\">\r\n                <div className=\"locationinput\">\r\n                <label className=\"locationlabel\">Enter the location</label><br/>\r\n                <input onChange={(e)=>city=e.target.value} placeholder=\"Enter your city\" /><button onClick={findlatlong} className=\"locationButton\">Change Location</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"mapContainer\">\r\n            <div className=\"map\">\r\n            <GoogleMapReact \r\n                bootstrapURLKeys={{keys: 'AIzaSyB1aViRShZ33unEwBKPPj691LWCTufpuGM'}}\r\n                defaultCenter={{lat: latLongValues.lat,lng: latLongValues.long}}\r\n                defaultZoom={6}\r\n                onGoogleApiLoaded={({map,maps})=>renderMarkers(map,maps)}>\r\n            </GoogleMapReact>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MapContainer;","import React from 'react';\r\n\r\nimport '../css/loader.css'\r\nconst Loading=()=>{\r\n    return (\r\n    <div className=\"loaderbody\">\r\n        <div className=\"loaderbox\">\r\n        <div className=\"loader\"></div>\r\n        </div>\r\n        <div className=\"body\"></div>  \r\n    </div>);\r\n}\r\nexport default Loading;","import React, { useState,useEffect,useContext } from 'react';\r\nimport LatLongContext from '../contexts/LatLongContext';\r\nimport WeatherDataContext from '../contexts/WeatherDataContext';\r\nimport { Line } from 'react-chartjs-2';\r\nimport moment from 'moment';\r\nimport Nav from './nav';\r\nimport '../css/chart.css';\r\nimport Loading from './loader';\r\nconst Chart=()=>{\r\n  var moment=require('moment-timezone');\r\n  const {latLongValues}=useContext(LatLongContext);\r\n  const {weatherData}=useContext(WeatherDataContext);\r\n  const [data,setChartData]=useState(null);\r\n  const [weatherDescription, setWeatherDescription] = useState(null);\r\n    useEffect(()=>{\r\n        let arr=[];\r\n        let tempHigh=[];\r\n        let tempLow=[];\r\n        let description=[];\r\n        let timeZoneOffSet=weatherData.timezone_offset;\r\n        weatherData.daily.map((day,index)=>{\r\n            if(index<=6)\r\n            {  \r\n                let utcOffSet=moment().tz(weatherData.timezone).utcOffset();\r\n                let date=new Date(day.dt*1000-(timeZoneOffSet*1000)+utcOffSet*60000);   \r\n                arr.push(moment(date).format('ddd'));\r\n                tempHigh.push(day.temp.max);\r\n                tempLow.push(day.temp.min);\r\n                description.push({description: day.weather[0].description,day: moment(date).format('ddd') });\r\n            }\r\n        })\r\n            setWeatherDescription(description);\r\n            setChartData({ backgroundColor: 'blue',\r\n            labels: arr,\r\n             datasets: [{\r\n                title: arr,\r\n                label: 'Low',\r\n                 data: tempLow,\r\n                 backgroundColor: [\r\n                     'darkblue',\r\n                 ],\r\n                 borderColor: [\r\n                     'darkblue',\r\n                 ],\r\n             },\r\n             {\r\n                 label: 'High',\r\n                 data: tempHigh,\r\n                 backgroundColor: [\r\n                     '#F0BC00',\r\n                 ],\r\n                 borderColor: ['#F0BC00']\r\n             },\r\n          ],\r\n        })\r\n    \r\n    },[latLongValues.lat,latLongValues.long])\r\n\r\nconst footer=(tooltipItems)=>{\r\n    let tooltip=tooltipItems[0];\r\n    for(let i=0;i<weatherDescription.length;i++)\r\n    {\r\n        if(tooltip.label==weatherDescription[i].day)\r\n        { \r\n            return weatherDescription[i].description;\r\n        }\r\n    }\r\n}\r\n\r\nif(data)\r\n{\r\n    return(\r\n        <div className=\"container2\">\r\n        <div className=\"location-container2\">\r\n         <Nav />\r\n         <div style={{textAlign: 'center',color: 'white'}}><h2>Graphical Representation</h2></div>\r\n          <Line className=\"linegraph\" data={data} options={{\r\n              \r\n              plugins: {\r\n                tooltip: {\r\n                  callbacks: {\r\n                   footer: footer\r\n                  } } },scales: {x:{grid: {color: 'white' } },}}} />\r\n        </div>\r\n        </div>\r\n        )\r\n}\r\nelse {\r\n    return(<Loading />)\r\n}\r\n    }    \r\n\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport SevenDayReport from './components/sevendays';\r\nimport LatLongContext from './contexts/LatLongContext';\r\nimport openWeatherApi from './components/openWeatherApi';\r\nimport WeatherDataContext from './contexts/WeatherDataContext';\r\nimport {Route,Router} from 'react-router-dom';\r\nimport CityContext from './contexts/CityContext';\r\nimport MapContainer from './components/map';\r\nimport Loading from './components/loader';\r\nimport Chart from './components/chart';\r\nimport history from './components/history';\r\nconst App=()=>{\r\n        console.log(\"invoked\")\r\n        const [latLongValues,setLatLongValues]=useState({lat: 45.508888,long: -73.561668})\r\n        const [city,setCity]=useState('Montreal, QC')\r\n        const [weatherData,setWeatherData]=useState(null);\r\n        useEffect(()=>{\r\n        (async()=>{\r\n        const response=await openWeatherApi.post(`onecall?lat=${latLongValues.lat}&lon=${latLongValues.long}&exclude=hourly,minutely&appid=d7dd86d5c005c7fb0b71e6245ba6d849&units=metric`);\r\n        setWeatherData(response.data);\r\n         })();\r\n},[latLongValues.lat,latLongValues.long])\r\n\r\n          if(weatherData)\r\n          {\r\n                return(\r\n                        <React.Fragment >\r\n                                <Router history={history}>\r\n                                <LatLongContext.Provider value={{latLongValues,setLatLongValues}}>\r\n                                <WeatherDataContext.Provider value={{weatherData,setWeatherData}}>\r\n                                <CityContext.Provider value={{city,setCity}}>\r\n                                <Route exact path=\"/\" component={SevenDayReport}   />    \r\n                                <Route exact path=\"/graph\" component={Chart } /> \r\n                                <Route exact path=\"/changelocation\" component={MapContainer} />\r\n                                </CityContext.Provider>\r\n                                </WeatherDataContext.Provider>\r\n                                </LatLongContext.Provider>\r\n                                </Router>\r\n                        </React.Fragment>\r\n                        )  \r\n          }\r\n                                 \r\n            else {\r\n                return(<Loading />)\r\n            }\r\n\r\n                        \r\n\r\n  \r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(\r\n<App />,document.querySelector('#root')\r\n)"],"sourceRoot":""}